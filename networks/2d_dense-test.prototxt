input: "data"
input_shape: { dim: 1 dim: 1 dim: 1460 dim: 1936}
input: "def"
input_shape: { dim: 1 dim: 132 dim: 132 dim: 2}
state: { phase: TEST }
name: '2d_dense'
force_backward: true
layer { top: 'data' top: 'label' name: 'loaddata'       type: 'HDF5Data'  hdf5_data_param { source: 'train_blobs.txt' batch_size: 1 } include: { phase: TRAIN }}
       
layer { type: 'CreateDeformation'
        bottom: 'label'
        top: 'def'
        name: 'create_deformation'
        create_deformation_param {
            random_offset_range_from_pdf: true
            batch_size: 1 ny: 460 nx: 460 ncomponents: 2
            random_elastic_grid_spacing     { v: 64 v: 64 }
            random_elastic_deform_magnitude { v: 8  v: 8  }
            random_rotate_from { v: 0  }
            random_rotate_to   { v: 360}
                   }
       include: { phase: TRAIN } }

layer { bottom: 'data' bottom: 'def' top: 'defdata'  name: 'def_data-defdata'   type: 'ApplyDeformation'  apply_deformation_param { interpolation: 'linear' extrapolation: 'mirror'} include: { phase: TRAIN }}
layer { bottom: 'data' bottom: 'def' top: 'd0a'      name: 'def_data-defdata'   type: 'ApplyDeformation'  apply_deformation_param { interpolation: 'linear' extrapolation: 'mirror'} include: { phase: TEST }}

layer { bottom: 'defdata'           top: 'd0a'       name: 'val_aug-d0a' type: 'ValueAugmentation' value_augmentation_param { black_from:-0.05 black_to:0.05 slope_min:0.8 slope_max:1.2 white_from:0.95 white_to:1.05 } include: { phase: TRAIN }}

#################################################
layer { bottom: 'd0a'               top: 'd0b'   name: 'conv_d0a-b'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 16   pad: 0 kernel_size: 3            weight_filler { type: 'msra' } bias_filler { type: 'constant' value:-0.1} }  include { phase: TEST } }
layer { bottom: 'd0a'               top: 'd0b'   name: 'conv_d0a-b'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 16   pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'msra' } bias_filler { type: 'constant' value:-0.1} }  include { phase: TRAIN} }
layer { bottom: 'd0b'               top: 'd0b'   name: 'relu_d0b'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'd0b' bottom: 'd0a' top: 'd0c'   name: 'concat1'  type: 'Concat' }
layer { bottom: 'd0c'               top: 'd0d'   name: 'conv_d0b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 32   pad: 0 kernel_size: 3          weight_filler { type: 'msra' } } }
layer { bottom: 'd0d'               top: 'd0d'   name: 'relu_d0c'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'd0d' bottom: 'd0c' top: 'd0f'   name: 'concat2'  type: 'Concat' }
layer { bottom: 'd0f'               top: 'd1a'   name: 'conv_d0c-1a'    type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 32   pad: 0 kernel_size: 2 stride: 2         weight_filler { type: 'msra' } }  }
layer { bottom: 'd1a'               top: 'd1a'   name: 'relu_d1a'       type: 'ReLU' relu_param {negative_slope: 0.1} }
#################################################


#################################################
layer { bottom: 'd1a'               top: 'd1b'   name: 'conv_d1a-b'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 32   pad: 0 kernel_size: 3          weight_filler { type: 'msra' } } }
layer { bottom: 'd1b'               top: 'd1b'   name: 'relu_d1b'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'd1b' bottom: 'd1a' top: 'd1c'   name: 'concat4'  type: 'Concat' }
layer { bottom: 'd1c'               top: 'd1d'   name: 'conv_d1b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 64  pad: 0 kernel_size: 3          weight_filler { type: 'msra' } } }
layer { bottom: 'd1d'               top: 'd1d'   name: 'relu_d1c'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'd1d' bottom: 'd1c' top: 'd1f'   name: 'concat5'  type: 'Concat' }
layer { bottom: 'd1f'               top: 'd2a'   name: 'conv_d1c-2a'    type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 64   pad: 0 kernel_size: 2 stride: 2         weight_filler { type: 'msra' } }  }
layer { bottom: 'd2a'               top: 'd2a'   name: 'relu_d2a'       type: 'ReLU' relu_param {negative_slope: 0.1} }
#################################################


#################################################
layer { bottom: 'd2a'               top: 'd2b'   name: 'conv_d2a-b'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 64  pad: 0 kernel_size: 3         weight_filler { type: 'msra' } } }
layer { bottom: 'd2b'               top: 'd2b'   name: 'relu_d2b'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'd2b' bottom: 'd2a' top: 'd2c'   name: 'concat7'  type: 'Concat' }
layer { bottom: 'd2c'               top: 'd2d'   name: 'conv_d2b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 128  pad: 0 kernel_size: 3         weight_filler { type: 'msra' } } }
layer { bottom: 'd2d'               top: 'd2d'   name: 'relu_d2c'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'd2d' bottom: 'd2c' top: 'd2f'   name: 'concat8'  type: 'Concat' }
layer { bottom: 'd2f'               top: 'd3a'   name: 'conv_d2c-3a'    type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 128   pad: 0 kernel_size: 2 stride: 2         weight_filler { type: 'msra' } }  }
layer { bottom: 'd3a'               top: 'd3a'   name: 'relu_d3a'       type: 'ReLU' relu_param {negative_slope: 0.1} }
#################################################


#################################################
layer { bottom: 'd3a'               top: 'd3b'   name: 'conv_d3a-b'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 128  pad: 0 kernel_size: 3         weight_filler { type: 'msra' } } }
layer { bottom: 'd3b'               top: 'd3b'   name: 'relu_d3b'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'd3b' bottom: 'd3a' top: 'd3c'   name: 'concat10'  type: 'Concat' }
layer { bottom: 'd3c'               top: 'd3d'   name: 'conv_d3b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 2048  pad: 0 kernel_size: 3         weight_filler { type: 'msra' } } }
layer { bottom: 'd3d'               top: 'd3d'   name: 'relu_d3c'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'd3d' bottom: 'd3c' top: 'd3f'   name: 'concat14'  type: 'Concat' }
#################################################


#################################################
layer { bottom: 'd3f'               top: 'u2a'   name: 'upconv_d3c_u2a' type: 'Deconvolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 2048  pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'msra' }} }
layer { bottom: 'u2a'               top: 'u2a'   name: 'relu_u2a'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'u2a' bottom: 'd2f' top: 'u2b'   name: 'concat_d2c_u2a-b'  type: 'Concat' }
layer { bottom: 'u2b'               top: 'u2c'   name: 'conv_u2b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 2048  pad: 0 kernel_size: 3         weight_filler { type: 'msra' }} }
layer { bottom: 'u2c'               top: 'u2c'   name: 'relu_u2c'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'u2c' bottom: 'u2b' top: 'u2e'   name: 'concat11'  type: 'Concat' }
layer { bottom: 'u2e'               top: 'u2f'   name: 'conv_u2c-d'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 512  pad: 0 kernel_size: 3         weight_filler { type: 'msra' }} }
layer { bottom: 'u2f'               top: 'u2f'   name: 'relu_u2d'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'u2f' bottom: 'u2e' top: 'u2g'   name: 'concat15'  type: 'Concat' }
#################################################


#################################################
layer { bottom: 'u2g'               top: 'u1a'   name: 'upconv_u2d_u1a' type: 'Deconvolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 512  pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'msra' }} }
layer { bottom: 'u1a'               top: 'u1a'   name: 'relu_u1a'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'u1a' bottom: 'd1f' top: 'u1b'   name: 'concat_d1c_u1a-b'  type: 'Concat' }
layer { bottom: 'u1b'               top: 'u1c'   name: 'conv_u1b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 512  pad: 0 kernel_size: 3         weight_filler { type: 'msra' }} }
layer { bottom: 'u1c'               top: 'u1c'   name: 'relu_u1c'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'u1c' bottom: 'u1b' top: 'u1e'   name: 'concat12'  type: 'Concat' }
layer { bottom: 'u1e'               top: 'u1f'   name: 'conv_u1c-d'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 256  pad: 0 kernel_size: 3         weight_filler { type: 'msra' }} }
layer { bottom: 'u1f'               top: 'u1f'   name: 'relu_u1d'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'u1f' bottom: 'u1e' top: 'u1g'   name: 'concat16'  type: 'Concat' }
#################################################


#################################################
layer { bottom: 'u1g'               top: 'u0a'   name: 'upconv_u1d_u0a' type: 'Deconvolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 256 pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'msra' }} }
layer { bottom: 'u0a'               top: 'u0a'   name: 'relu_u0a'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'u0a' bottom: 'd0f' top: 'u0b'   name: 'concat_d0c_u0a-b'  type: 'Concat' }
layer { bottom: 'u0b'               top: 'u0c'   name: 'conv_u0b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 256 pad: 0 kernel_size: 3               weight_filler { type: 'msra' }} }
layer { bottom: 'u0c'               top: 'u0c'   name: 'relu_u0c'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'u0c' bottom: 'u0b' top: 'u0e'   name: 'concat13'  type: 'Concat' }
layer { bottom: 'u0e'               top: 'u0f'   name: 'conv_u0c-d'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 128 pad: 0 kernel_size: 3           weight_filler {type: 'msra' }} }
layer { bottom: 'u0f'               top: 'u0f'   name: 'relu_u0d'       type: 'ReLU' relu_param {negative_slope: 0.1} }
layer { bottom: 'u0f' bottom: 'u0e' top: 'u0g'   name: 'concat17'  type: 'Concat' }
#################################################


layer { bottom: 'u0g'               top: 'score' name: 'conv_u0d-score' type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 2 pad: 0 kernel_size: 1            weight_filler { type: 'msra' }} }
layer { bottom: 'label'   bottom: 'def' top: 'labelcrop'    name: 'def_label-crop'     type: 'ApplyDeformation'  apply_deformation_param { interpolation: 'nearest' extrapolation: 'mirror' output_shape_from: 'u0g'} include: { phase: TRAIN }}
layer { bottom: 'score' bottom: 'labelcrop' top: 'loss'  name: 'loss'   type: 'SoftmaxWithLoss'  include: { phase: TRAIN }}
