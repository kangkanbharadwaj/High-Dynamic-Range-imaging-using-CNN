name: 'hdr'
force_backward: true
layer { top: 'image' top: 'label' name: 'loaddata'       type: 'HDF5Data'  hdf5_data_param { source: 'new_train_list.txt' batch_size: 1 } include: { phase: TRAIN }}

#layer { top: 'def' name: 'create_deformation' type: 'CreateDeformation' 
#       create_deformation_param {
#            batch_size: 4 ny: 480 nx: 640 ncomponents: 2
#           random_offset_from { v: -20  v: -20 }
#            random_offset_to   { v:  20 v: 20 }
#            random_rotate_from { v: -10 }
#            random_rotate_to   { v: 10  }
#                   }
#       include: { phase: TRAIN } }

#layer { bottom: 'data' bottom: 'def' top: 'd2x' name: 'def_data-data2' type: 'ApplyDeformation'  apply_deformation_param { interpolation: 'linear' extrapolation: 'mirror'} include: { phase: TRAIN }}

#layer { name: "Eltwise1" type: "Eltwise" bottom: "d2x" top: "d0a" eltwise_param { operation: SUM coeff: 0.00392156862745 } }
#layer { name: "Eltwise2" type: "Eltwise" bottom: "hdr" top: "hdrx" eltwise_param { operation: SUM coeff: 0.1 } }
       
#################################################
layer { bottom: 'image'               top: 'd0b'   name: 'conv_d0a-b'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 32   pad: 1 kernel_size: 3 engine: CAFFE weight_filler { type: 'msra' } bias_filler { type: "constant" value: -0.5 } }  include { phase: TRAIN} }
layer { bottom: 'd0b'               top: 'd0b'   name: 'relu_d0b'       type: 'ReLU'}
layer { bottom: 'd0b'               top: 'drb'   name: 'DropoutLayer1'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'drb'               top: 'd0c'   name: 'conv_d0b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 32   pad: 1 kernel_size: 3 weight_filler { type: 'msra' } } }
layer { bottom: 'd0c'               top: 'd0c'   name: 'relu_d0c'       type: 'ReLU'}
layer { bottom: 'd0c'               top: 'd1a'   name: 'pool_d0c-1a'    type: 'Pooling'       pooling_param { pool: MAX kernel_size: 2 stride: 2  engine: CAFFE} }
#################################################

#################################################
layer { bottom: 'd1a'               top: 'dr1'   name: 'DropoutLayer2'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr1'               top: 'd1b'   name: 'conv_d1a-b'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 64   pad: 1 kernel_size: 3         weight_filler { type: 'msra' } } }
layer { bottom: 'd1b'               top: 'd1b'   name: 'relu_d1b'       type: 'ReLU' }
layer { bottom: 'd1b'               top: 'dr1b'   name: 'DropoutLayer3'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr1b'               top: 'd1c'   name: 'conv_d1b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 64  pad: 1 kernel_size: 3          weight_filler { type: 'msra' } } }
layer { bottom: 'd1c'               top: 'd1c'   name: 'relu_d1c'       type: 'ReLU' }
layer { bottom: 'd1c'               top: 'd2a'   name: 'pool_d1c-2a'    type: 'Pooling'       pooling_param { pool: MAX kernel_size: 2 stride: 2  engine: CAFFE} }
#################################################

#################################################
layer { bottom: 'd2a'               top: 'dr2'   name: 'DropoutLayer4'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr2'               top: 'd2b'   name: 'conv_d2a-b'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 128  pad: 1 kernel_size: 3         weight_filler { type: 'msra' } } }
layer { bottom: 'd2b'               top: 'd2b'   name: 'relu_d2b'       type: 'ReLU' }
layer { bottom: 'd2b'               top: 'dr2b'   name: 'DropoutLayer5'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr2b'               top: 'd2c'   name: 'conv_d2b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 128  pad: 1 kernel_size: 3        weight_filler { type: 'msra' } } }
layer { bottom: 'd2c'               top: 'd2c'   name: 'relu_d2c'       type: 'ReLU' }
layer { bottom: 'd2c'               top: 'd3a'   name: 'pool_d2c-3a'    type: 'Pooling'       pooling_param { pool: MAX kernel_size: 2 stride: 2  engine: CAFFE} }
#################################################

#################################################
layer { bottom: 'd3a'               top: 'dr3c'   name: 'DropoutLayer6'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr3c'               top: 'd3b'   name: 'conv_d3a-b'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 256  pad: 1 kernel_size: 3        weight_filler { type: 'msra' } } }
layer { bottom: 'd3b'               top: 'd3b'   name: 'relu_d3b'       type: 'ReLU' }
layer { bottom: 'd3b'               top: 'dr3d'   name: 'DropoutLayer7'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr3d'               top: 'd3c'   name: 'conv_d3b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 256  pad: 1 kernel_size: 3     weight_filler { type: 'msra' } } }
layer { bottom: 'd3c'               top: 'd3c'   name: 'relu_d3c'       type: 'ReLU' }
layer { bottom: 'd3c'               top: 'd4a'   name: 'pool_d3c-4a'    type: 'Pooling'       pooling_param { pool: MAX kernel_size: 2 stride: 2  engine: CAFFE} }
#################################################

#################################################
layer { bottom: 'd4a'               top: 'dr4'   name: 'DropoutLayer8'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr4'               top: 'd4b'   name: 'conv_d4a-b'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 512  pad: 1 kernel_size: 3         weight_filler { type: 'msra' } } }
layer { bottom: 'd4b'               top: 'd4b'   name: 'relu_d4b'       type: 'ReLU' }
layer { bottom: 'd4b'               top: 'dr4b'   name: 'DropoutLayer9'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr4b'               top: 'd4c'   name: 'conv_d4b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 512  pad: 1 kernel_size: 3        weight_filler { type: 'msra' } } }
layer { bottom: 'd4c'               top: 'd4c'   name: 'relu_d4c'       type: 'ReLU' }
#################################################

#################################################
layer { bottom: 'd4c'               top: 'u3a'   name: 'upconv_d4c_u3a' type: 'Deconvolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 256  pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'msra' }} }
layer { bottom: 'u3a'               top: 'u3a'   name: 'relu_u3a'       type: 'ReLU' }
layer { bottom: 'u3a' bottom: 'd3c' top: 'u3b'   name: 'concat_d3c_u3a-b'  type: 'Concat' }
layer { bottom: 'u3b'               top: 'dr5'   name: 'DropoutLayer10'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr5'               top: 'u3c'   name: 'conv_u3b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 256  pad: 1 kernel_size: 3         weight_filler { type: 'msra' }} }
layer { bottom: 'u3c'               top: 'u3c'   name: 'relu_u3c'       type: 'ReLU' }
layer { bottom: 'u3c'               top: 'dr5a'   name: 'DropoutLayer11'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr5a'               top: 'u3d'   name: 'conv_u3c-d'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 256  pad: 1 kernel_size: 3         weight_filler { type: 'msra' }} }
layer { bottom: 'u3d'               top: 'u3d'   name: 'relu_u3d'       type: 'ReLU' }
#################################################

#################################################
layer { bottom: 'u3d'               top: 'u2a'   name: 'upconv_d3c_u2a' type: 'Deconvolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 128  pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'msra' }} }
layer { bottom: 'u2a'               top: 'u2a'   name: 'relu_u2a'       type: 'ReLU' }
layer { bottom: 'u2a' bottom: 'd2c' top: 'u2b'   name: 'concat_d2c_u2a-b'  type: 'Concat' }
layer { bottom: 'u2b'               top: 'dr5c'   name: 'DropoutLayer12'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr5c'               top: 'u2c'   name: 'conv_u2b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 128  pad: 1 kernel_size: 3         weight_filler { type: 'msra' }} }
layer { bottom: 'u2c'               top: 'u2c'   name: 'relu_u2c'       type: 'ReLU' }
layer { bottom: 'u2c'               top: 'dr5d'   name: 'DropoutLayer13'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr5d'               top: 'u2d'   name: 'conv_u2c-d'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 128  pad: 1 kernel_size: 3         weight_filler { type: 'msra' }} }
layer { bottom: 'u2d'               top: 'u2d'   name: 'relu_u2d'       type: 'ReLU' }
#################################################


#################################################
layer { bottom: 'u2d'               top: 'u1a'   name: 'upconv_u2d_u1a' type: 'Deconvolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 64  pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'msra' }} }
layer { bottom: 'u1a'               top: 'u1a'   name: 'relu_u1a'       type: 'ReLU' }
layer { bottom: 'u1a' bottom: 'd1c' top: 'u1b'   name: 'concat_d1c_u1a-b'  type: 'Concat' }
layer { bottom: 'u1b'               top: 'dr5e'   name: 'DropoutLayer14'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr5e'               top: 'u1c'   name: 'conv_u1b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 64  pad: 1 kernel_size: 3         weight_filler { type: 'msra' }} }
layer { bottom: 'u1c'               top: 'u1c'   name: 'relu_u1c'       type: 'ReLU' }
layer { bottom: 'u1c'               top: 'dr5f'   name: 'DropoutLayer15'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr5f'               top: 'u1d'   name: 'conv_u1c-d'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 64  pad: 1 kernel_size: 3         weight_filler { type: 'msra' }} }
layer { bottom: 'u1d'               top: 'u1d'   name: 'relu_u1d'       type: 'ReLU' }
#################################################


#################################################
layer { bottom: 'u1d'               top: 'u0a'   name: 'upconv_u1d_u0a' type: 'Deconvolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 32 pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'msra' }} }
layer { bottom: 'u0a'               top: 'u0a'   name: 'relu_u0a'       type: 'ReLU' }
layer { bottom: 'u0a' bottom: 'd0c' top: 'u0b'   name: 'concat_d0c_u0a-b'  type: 'Concat' }
layer { bottom: 'u0b'               top: 'dr6a'   name: 'DropoutLayer16'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr6a'               top: 'u0c'   name: 'conv_u0b-c'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 32 pad: 1 kernel_size: 3               weight_filler { type: 'msra' }} }
layer { bottom: 'u0c'               top: 'u0c'   name: 'relu_u0c'       type: 'ReLU' }
layer { bottom: 'u0c'               top: 'dr6b'   name: 'DropoutLayer17'     type: 'Dropout'   dropout_param { dropout_ratio: 0.3 } }
layer { bottom: 'dr6b'               top: 'u0d'   name: 'conv_u0c-d'     type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 32 pad: 1 kernel_size: 3           weight_filler {type: 'msra' }} }
layer { bottom: 'u0d'               top: 'u0d'   name: 'relu_u0d'       type: 'ReLU' }
#################################################

#################################################
#layer { bottom: 'u0d' name: 'output'       type: 'HDF5Output' hdf5_output_param { file_name: 'score_iter_%05d.h5' dset_name: '/u0d' } include: { phase: TRAIN }}
#################################################

layer { bottom: 'u0d'               top: 'score' name: 'conv_u0d-score' type: 'Convolution'   param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 }  convolution_param { num_output: 3 pad: 0 kernel_size: 1            weight_filler { type: 'msra' }} }
#layer { bottom: 'hdr' bottom: 'def' top: 'hdry'  name: 'def_label-crop'   type: 'ApplyDeformation'  apply_deformation_param { interpolation: 'nearest' extrapolation: 'mirror' output_shape_from: 'score'} #include: { phase: TRAIN }}
#layer { name: "Eltwise3" type: "Eltwise" bottom: "hdry" top: "hdrz" eltwise_param { operation: SUM coeff: 10000 } }
#layer { bottom: 'score' bottom: 'hdry' top: 'loss'  name: 'loss'   type: 'EuclideanLoss' include: { phase: TRAIN }}
#layer { name: "loss1" type: "L1Loss" bottom: "score" bottom: "hdry" top: "loss1" loss_weight: 1.0 }
layer { bottom: 'score' bottom: 'label' top: 'loss'  name: 'loss'   type: 'SoftmaxWithLoss'  include: { phase: TRAIN }}
